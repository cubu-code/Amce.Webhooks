using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using Acme.Webhooks.Services;
using Cubu.Webhooks.Router;

namespace Acme.Webhooks
{
    public class Startup
    {
        public Startup(IConfiguration configuration)
        {
            Configuration = configuration;
        }

        public IConfiguration Configuration { get; }

        // This method gets called by the runtime. Use this method to add services to the container.
        public void ConfigureServices(IServiceCollection services)
        {
            services.AddCors();
            services.AddControllers();

            services.AddScoped<IDemoService, DemoService>();
        }

        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
        public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
        {
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }

            app.UseCertificateForwarding();
            app.UseAuthentication();

            app.UseCors(options => options
                 .AllowAnyOrigin()
                 .AllowAnyMethod()
                 .AllowAnyHeader());

            // app.UseHttpsRedirection(); // comment this out when using ngrok!
            app.UseRouting();

            // app.UseAuthorization();

            // The Webhooks Router middleware, intercepts requests generated by cubu and routes them to 
            // the implementation code, defined by the WebhooksMap class.
            // The root URL for cubu webhook handlers is: "{server-address}/api/cubu"

            // No authentication
            app.UseWebhooksRouter(options => options
                .WithBaseUrl("api/cubu")
                .UseWebhooksMap(new CubuWebhooksMap()));

            // Basic authentication
            // app.UseWebhooksRouter(options => options
            //     .WithBaseUrl("api/cubu")
            //     .UseWebhooksMap(new CubuWebhooksMap())
            //     .WithBasicAuthentication(b =>
            //     {
            //         b.UserName = "user-name";
            //         b.Password = "Pa$$w0rd";
            //     }));

            // Client certificate authentication
            // app.UseWebhooksRouter(options => options
            //     .WithBaseUrl("api/cubu")
            //     .UseWebhooksMap(new CubuWebhooksMap())
            //     .WithCertificateAuthentication(cert => cert
            //         .IgnoreAllCertificateErrors()
            //         .AllowSelfSignedCertificate()
            //         .TrustCertificate("6DC024B15B621B2B031C872A501CA20B8A6C0B3F")));

            // Token authentication
            // app.UseWebhooksRouter(options => options
            //     .WithBaseUrl("api/cubu")
            //     .UseWebhooksMap(new CubuWebhooksMap())
            //     .WithTokenAuthentication(options => options.Token = "19046d3cf88948e698d089368a49b0b2"));

            app.UseEndpoints(endpoints =>
            {
                endpoints.MapControllers();
            });
        }
    }
}
